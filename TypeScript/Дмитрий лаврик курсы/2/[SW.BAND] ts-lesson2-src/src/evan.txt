export interface RouteRecordSingleView extends _RouteRecordBase {
	/**
	 * Component to display when the URL matches this route.
	 */
	component: RawRouteComponent
	components?: never
	children?: never
	redirect?: never
 
	/**
	 * Allow passing down params as props to the component rendered by `router-view`.
	 */
	props?: _RouteRecordProps
 }

 export interface RouteRecordSingleViewWithChildren extends _RouteRecordBase {
	/**
	 * Component to display when the URL matches this route.
	 */
	component?: RawRouteComponent | null | undefined
	components?: never
 
	children: RouteRecordRaw[]
 
	/**
	 * Allow passing down params as props to the component rendered by `router-view`.
	 */
	props?: _RouteRecordProps
 }

 export interface RouteRecordMultipleViews extends _RouteRecordBase {
	/**
	 * Components to display when the URL matches this route. Allow using named views.
	 */
	components: Record<string, RawRouteComponent>
	component?: never
	children?: never
	redirect?: never
 
	/**
	 * Allow passing down params as props to the component rendered by
	 * `router-view`. Should be an object with the same keys as `components` or a
	 * boolean to be applied to every component.
	 */
	props?: Record<string, _RouteRecordProps> | boolean
 }
 
 export interface RouteRecordRedirect extends _RouteRecordBase {
	redirect: RouteRecordRedirectOption
	component?: never
	components?: never
	props?: never
 }