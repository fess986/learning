// Дана лекционная аудитория, в которой несколько профессоров хотят прочесть свои лекции. Для составления расписания профессора подали заявки, вида [si, fi) – время начала и конца лекции. Лекция считается открытым полуинтервалом, то есть какая-то лекция может начаться в момент окончания другой, без перерыва. Составьте расписание занятий так, чтобы выполнить максимальное количество заявок.
//     Формат ввода
//     В первой строке вводится натуральное число N, не более 1000 – общее количество заявок. Затем вводится N строк с описаниями заявок - по два числа в каждом si и fi.
    
//     Гарантируется, что si < fi. Время начала и окончания лекции – натуральное число, не превышает 1440 (в минутах с начала суток).
//     Формат вывода
    
//     Выведите одно число – максимальное количество заявок, которые можно выполнить.

//     1
// 5 10

//  output 1

//  3
// 1 5
// 2 3
// 3 4

// output 2

const N = 10;   // количество заявок

// запросы
let requests = [[0,100], [150,300], [200,500], [500,800], [600,700], [700,800], [850,950], [900,1100], [1000,1200], [1300,1440]]

// сортируем по концу лекции. 
let sortedRequests = requests.sort((a, b) => a[1]-b[1]);
console.log(sortedRequests);

let end = sortedRequests[0][1];
let count = 1;

// идем по массиву и вычеркиваем те лекции, которые начинаются раньше чем заканчивается предыдущая. когда находим не удаляемую - переписываем значение конца лекции
for (let i = 1; i < N; i++) {
  console.log(sortedRequests[i])
  if (sortedRequests[i][0] >= end) {
    end = sortedRequests[i][1];
    count++
  }
}

console.log(count);
