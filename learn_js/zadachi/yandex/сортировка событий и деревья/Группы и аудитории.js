// A. Группы и аудитории
// Ограничение времени 	1 секунда
// Ограничение памяти 	64Mb
// Ввод 	стандартный ввод или input.txt
// Вывод 	стандартный вывод или output.txt
// В университете есть n аудиторий и m учебных групп. Для каждой аудитории задана её вместимость, а для каждой группы — численность. Группа может заниматься в аудитории только если её численность не превосходит размера аудитории. Определите максимальное количество групп, которые можно рассадить по аудиториям.
// Формат ввода
// В первой строке вводится число n (1 ≤ n ≤ 100000).
// Во второй строке вводится n чисел — численность групп. Численность не превосходит 100000.
// В третьей строке вводится число m (1 ≤ m ≤ 100000).
// В четвертой строке вводится m чисел — вместимость аудиторий. Вместимость не превосходит 100000.
// Формат вывода
// Выведите ответ на задачу.
// 3
// 3 1 2
// 2
// 1 1
// output
// 1
// 2
// 1 2
// 3
// 3 2 1
// output
// 2

let studentsNumber = [1, 2]
let classroomsCapacity = [3, 2, 1];

studentsNumber.sort((a,b) => a - b);
classroomsCapacity.sort((a,b) => a - b);
let leftPointer = 0;
let count = 0;


for (let i = 0; i < studentsNumber.length; i++) {
    // передвигаем указатель массива вместимости аудиторий, пока не найдется та, которая может вместить очередную группу.
    while ((leftPointer < classroomsCapacity.length) && (classroomsCapacity[leftPointer] < studentsNumber[i])) {
        leftPointer++;
    } 
    // если дошли до конца массива, или даже вышли за его предел - выходим
    if ((leftPointer >= (classroomsCapacity.length - 1)) || (classroomsCapacity[leftPointer] < studentsNumber[i])) {
        break;
    }
    
    count++; // считаем каждую итерацию пока нас не выкинет предыдущее условие
    leftPointer++; // двигаем указатель каждый раз, так как мы не можем в одну аудиторию запихнуть 2 группы
}

console.log(count)

// решение в академии 1 в 1 как моё