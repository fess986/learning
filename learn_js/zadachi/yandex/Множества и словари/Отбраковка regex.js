// На заводе по производству химических соединений есть реактор, в результате работы которого получаются химические вещества, формула которых записывается в виде строки состоящей из заглавных и строчных латинских букв.

// Также у завода есть список желательных веществ (веществ первого сорта), которые хотелось бы получить.

// Кроме того заводу также интересны вещества второго и третьего сорта.

// Вещество называется веществом первого сорта, если его формула в точности совпадает с формулой из списка желательных веществ.

// Вещество называется веществом второго сорта, если из него можно получить вещество из списка желательных в разультате замены некоторых заглавных букв на строчные и наоборот.

// Вещество называется веществом третьего сорта, если в нем возможны как замены букв с заглавных на строчные и наоборот, так и замены любых гласных букв (aeiou) на другие гласные буквы, таким образом чтобы получилось вещество из списка желательных.

// В связи со сложной экономической ситуацией было принято решение не выбрасывать вещества второго и третьего сорта и для каждого из них найти похожее вещество из списка желательных, причем, если преобразованиями из вещества второго или третьего сорта можно получить несколько веществ из списка желательных, то его следует преобразовывать к тому веществу, которое находится раньше в списке желательных.
// Формат ввода

// В первой строке вводится число n (1 ≤ n ≤ 5000) — количество веществ в списке желательных.

// Во второй строке вводится n слов через пробел — список желательных веществ.

// В третьей строке вводится число k (1 ≤ k ≤ 5000) — количество веществ, полученных в реакторе.

// Во второй строке вводится k слов через пробел — список веществ, полученных в реакторе.

// Длина всех слов не превосходит 7.
// Формат вывода

// Для каждого вещества выведите:

// Если оно является веществом первого сорта — название этого вещества.

// Если оно не является веществом первого сорта, но является веществом второго сорта — первое из списка желательных веществ, к которому можно преобразовать это вещество.

// Если оно не является веществом первого или второго сорта, но является веществом третьего сорта — первое из списка желательных веществ, к которому можно преобразовать это вещество.

// В противном случае выведите пустую строку.

// Все слова в вывод должны быть разделены одним пробелом.

// 4
// LiTe lite bare Bare
// 10
// Bare BARE Bear bear lite Lite LiTe leti leet leto

// output
// Bare bare   lite LiTe LiTe LiTe  LiTe

// 1
// DeLay
// 1
// delOy
// output

const book = `LiTe lite bare Bare`;
const test = [`Bare`, `BARE`, `Bear`, `bear`, `lite`, `Lite`, `LiTe`, `leti`, `leet`, `leto`];
output = [];
let testingElement;
let regexp;
let regexpLayout;


for (let i = 0; i < test.length; i++) {
  // первый сорт самый простой просто сравниваем строки
  regexp = new RegExp(test[i]);
  testingElement = book.match(regexp);
  if (testingElement) {
    output.push(testingElement[0]);
    continue;
  }

  // второй сорт тоже очень прост, просто отключаем проверку регистра
  regexp = new RegExp(test[i], `gi`);
  testingElement = book.match(regexp);
  if (testingElement) {
    output.push(testingElement[0]);
    continue
  }

  // в 3 варианте мы клеим шаблон для нашего регулярного выражения. В случае согласной - просто добавляем ее, в случае с гласной - клеим в шаблон выбор из различных гласных букв [aeiou]
  regexp = '';
  regexpLayout = '';
  for (let j = 0; j < test[i].length; j++) {
    if (['a','e','i','o','u','A','E','I','O','U'].includes(test[i][j])) {
      regexpLayout = regexpLayout + `[aeiou]`;
    } else {
      regexpLayout = regexpLayout + test[i][j];
    }
  }
  regexp = new RegExp(regexpLayout, `gi`);
  testingElement = book.match(regexp);
  if (testingElement) {
    output.push(testingElement[0]);
    continue
  } else {
    output.push(null)
  }
}

console.log(output)

 // вариант школы отличается тем, что вместо регулярных выражений - перевод и того и другого в ловеркейс для сравнения, а гласные меняются на # и в словаре и в искомом.